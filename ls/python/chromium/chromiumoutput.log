IMPORTANT DEBUGGING NOTE: batches of tests are run inside their
own process. For debugging a test inside a debugger, use the
--gtest_filter=<your_test_name> flag along with
--single-process-tests.
Using sharding settings from environment. This is shard 0/1
Using 1 parallel jobs.
Note: Google Test filter = URLParser.Parsing
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from URLParser
[ RUN      ] URLParser.Parsing
../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "f,"
  parsed_url.host()
    Which is: "f%2C"
{"url":"https://F,", "error":{"component":"host", "expected":"f,", "actual":"f%2C"}}
Stack trace:
#0 0x55597a6aaac5 url::(anonymous namespace)::CheckComponents()
#1 0x55597a6a87e8 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:35: Failure
Value of: parsed_url.is_valid()
  Actual: false
Expected: true
{"url":"file://;,", "exception":"invalid URL"}
Stack trace:
#0 0x55597a6a8686 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "z!"
  parsed_url.host()
    Which is: "z%21"
{"url":"wss://Z!", "error":{"component":"host", "expected":"z!", "actual":"z%21"}}
Stack trace:
#0 0x55597a6aaac5 url::(anonymous namespace)::CheckComponents()
#1 0x55597a6a87e8 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "*o"
  parsed_url.host()
    Which is: "%2Ao"
{"url":"wss://[::]<//*o", "error":{"component":"host", "expected":"*o", "actual":"%2Ao"}}
Stack trace:
#0 0x55597a6aaac5 url::(anonymous namespace)::CheckComponents()
#1 0x55597a6a87e8 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: ""
  parsed_url.host()
    Which is: ".."
{"url":"N:/<///../]", "error":{"component":"host", "expected":"", "actual":".."}}
Stack trace:
#0 0x55597a6aaac5 url::(anonymous namespace)::CheckComponents()
#1 0x55597a6a87e8 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "_"
  parsed_url.host()
    Which is: ""
{"url":"D://_", "error":{"component":"host", "expected":"_", "actual":""}}
Stack trace:
#0 0x55597a6aaac5 url::(anonymous namespace)::CheckComponents()
#1 0x55597a6a87e8 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "xn----hja4h"
  parsed_url.host()
    Which is: ""
{"url":"file://ġ-Ł</", "error":{"component":"host", "expected":"xn----hja4h", "actual":""}}
Stack trace:
#0 0x55597a6aaac5 url::(anonymous namespace)::CheckComponents()
#1 0x55597a6a87e8 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

[  FAILED  ] URLParser.Parsing (4 ms)
[----------] 1 test from URLParser (4 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (4 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] URLParser.Parsing

 1 FAILED TEST
[1/1] URLParser.Parsing (4 ms)
1 test failed:
    URLParser.Parsing (../../url/url_parsing_unittest.cc:103)
Tests took 0 seconds.
