IMPORTANT DEBUGGING NOTE: batches of tests are run inside their
own process. For debugging a test inside a debugger, use the
--gtest_filter=<your_test_name> flag along with
--single-process-tests.
Using sharding settings from environment. This is shard 0/1
Using 1 parallel jobs.
Note: Google Test filter = URLParser.Parsing
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from URLParser
[ RUN      ] URLParser.Parsing
../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: ",="
  parsed_url.host()
    Which is: ""
{"url":"file://,=</", "error":{"component":"host", "expected":",=", "actual":""}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:32: Failure
Value of: parsed_url.is_valid()
  Actual: false
Expected: true
{"url":"F:/<//~!", "exception":"invalid URL"}
Stack trace:
#0 0x55d8462d5bc6 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "[::]"
  parsed_url.host()
    Which is: ""
{"url":"file://[::]/é…œ</", "error":{"component":"host", "expected":"[::]", "actual":""}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "[dfaa::]"
  parsed_url.host()
    Which is: ""
{"url":"R://[dfaa::]", "error":{"component":"host", "expected":"[dfaa::]", "actual":""}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "[::fffa:f1fa]"
  parsed_url.host()
    Which is: ""
{"url":"n://[::255.250.241.250]", "error":{"component":"host", "expected":"[::fffa:f1fa]", "actual":""}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "[fdbe:ccab::acdf:daef:fdfb:fbff]"
  parsed_url.host()
    Which is: ""
{"url":"d://[fdbe:ccab::acdf:daef:253.251.251.255]", "error":{"component":"host", "expected":"[fdbe:ccab::acdf:daef:fdfb:fbff]", "actual":""}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "$"
  parsed_url.host()
    Which is: "%24"
{"url":"wss://$</", "error":{"component":"host", "expected":"$", "actual":"%24"}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: ")5"
  parsed_url.host()
    Which is: "%295"
{"url":"file://)5", "error":{"component":"host", "expected":")5", "actual":"%295"}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:32: Failure
Value of: parsed_url.is_valid()
  Actual: false
Expected: true
{"url":"B://[::deee:202.255.253.255]</", "exception":"invalid URL"}
Stack trace:
#0 0x55d8462d5bc6 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: ","
  parsed_url.host()
    Which is: "%2C"
{"url":"https://.@,", "error":{"component":"host", "expected":",", "actual":"%2C"}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "\""
  parsed_url.host()
    Which is: "%22"
{"url":"file://"", "error":{"component":"host", "expected":""", "actual":"%22"}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: ")"
  parsed_url.host()
    Which is: "%29"
{"url":"https://[::]<//%@)", "error":{"component":"host", "expected":")", "actual":"%29"}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "`"
  parsed_url.host()
    Which is: "%60"
{"url":"https://[::]<//M@`", "error":{"component":"host", "expected":"`", "actual":"%60"}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "[d1db:aace::]"
  parsed_url.host()
    Which is: ""
{"url":"X://[d1db:aace::]", "error":{"component":"host", "expected":"[d1db:aace::]", "actual":""}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "b$"
  parsed_url.host()
    Which is: "b%24"
{"url":"http://b$", "error":{"component":"host", "expected":"b$", "actual":"b%24"}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:32: Failure
Value of: parsed_url.is_valid()
  Actual: false
Expected: true
{"url":"o://[::5bde]</", "exception":"invalid URL"}
Stack trace:
#0 0x55d8462d5bc6 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

../../url/url_parsing_unittest.cc:54: Failure
Expected equality of these values:
  parse_case.host
    Which is: "[dcbb:ddbb::ddbb]"
  parsed_url.host()
    Which is: ""
{"url":"o://[dcbb:ddbb::ddbb]", "error":{"component":"host", "expected":"[dcbb:ddbb::ddbb]", "actual":""}}
Stack trace:
#0 0x55d8462d8005 url::(anonymous namespace)::CheckComponents()
#1 0x55d8462d5d28 url::(anonymous namespace)::URLParser_Parsing_Test::TestBody()

[  FAILED  ] URLParser.Parsing (8 ms)
[----------] 1 test from URLParser (8 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (9 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] URLParser.Parsing

 1 FAILED TEST
[1/1] URLParser.Parsing (8 ms)
1 test failed:
    URLParser.Parsing (../../url/url_parsing_unittest.cc:124)
Tests took 1 seconds.
