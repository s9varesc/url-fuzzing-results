Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:01:06] removing old coverage data
[00:01:08] executing tests
[08:09:11] generating reports
[08:09:14] browser output cleanup
[08:09:14] fuzzing chromium
[2021-09-12 04:44:41,400 INFO] Building ['url_unittests'].
[08:10:08] ninja: Entering directory `/home/chromium/src/out/coverage'
[08:10:12] [0/1] Regenerating ninja files
[08:10:27] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[08:10:28] [2/2] LINK ./url_unittests
[2021-09-12 04:45:03,258 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-12 04:45:06,117 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-12 04:45:06,119 INFO] Creating target profile data file.
[2021-09-12 04:45:06,706 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-12 04:45:06,710 INFO] Creating the coverage profile data file.
[2021-09-12 04:45:06,731 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-12 04:45:06,732 INFO] Finding shared libraries for targets (if any).
[2021-09-12 04:45:06,739 INFO] Finished finding shared libraries for targets.
[2021-09-12 04:45:06,739 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-12 04:45:08,572 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[08:10:34] browser output cleanup
[08:10:34] fuzzing languages
[08:11:12] fuzzing Python
[08:11:14] fuzzing C
[08:11:14] fuzzing Cpp
[08:11:23] fuzzing Java
[08:11:23] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[08:11:23] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[08:12:03] fuzzing Ruby
[08:12:12] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[08:12:12] fuzzing JavaScript
[08:12:18] fuzzing PHP
[08:12:42] fuzzing Go
[08:12:44] finalizing results
[08:15:00] skip writing md file
[08:15:00] skip html prettify due to large nr of inputs (38548)
[08:15:00] writing resultoverview
[08:15:00] skip prettify detailed results due to large nr of inputs(38548)
[08:15:00] writing browseroverview
[08:15:00] used seed: -3839114336793880439
[08:15:01] done
