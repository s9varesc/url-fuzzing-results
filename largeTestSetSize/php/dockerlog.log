Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:00:00] removing old coverage data
[00:00:02] executing tests
[04:43:00] generating reports
[04:43:02] browser output cleanup
[04:43:02] fuzzing chromium
[2021-09-06 05:02:34,945 INFO] Building ['url_unittests'].
[04:43:03] ninja: Entering directory `/home/chromium/src/out/coverage'
[04:43:07] [0/1] Regenerating ninja files
[04:43:25] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[04:43:28] [2/2] LINK ./url_unittests
[2021-09-06 05:03:01,067 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-06 05:03:02,429 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-06 05:03:02,430 INFO] Creating target profile data file.
[2021-09-06 05:03:02,985 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-06 05:03:03,572 INFO] Creating the coverage profile data file.
[2021-09-06 05:03:03,601 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-06 05:03:03,602 INFO] Finding shared libraries for targets (if any).
[2021-09-06 05:03:03,610 INFO] Finished finding shared libraries for targets.
[2021-09-06 05:03:03,610 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-06 05:03:05,276 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[04:43:33] browser output cleanup
[04:43:33] fuzzing languages
[04:43:33] fuzzing Python
[04:43:34] fuzzing C
[04:43:35] fuzzing Cpp
[04:43:45] fuzzing Java
[04:43:45] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[04:43:45] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[04:44:23] fuzzing Ruby
[04:44:25] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[04:44:25] fuzzing JavaScript
[04:44:30] fuzzing PHP
[04:44:42] fuzzing Go
[04:44:43] finalizing results
[04:45:20] skip writing md file
[04:45:20] skip html prettify due to large nr of inputs (18573)
[04:45:20] writing resultoverview
[04:45:20] skip prettify detailed results due to large nr of inputs(18573)
[04:45:20] writing browseroverview
[04:45:20] used seed: -3839114336793880439
[04:45:20] done
