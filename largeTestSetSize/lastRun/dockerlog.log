Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:11:51] removing old coverage data
[00:11:53] executing tests
[07:33:29] generating reports
[07:33:31] browser output cleanup
[07:33:31] fuzzing chromium
[2021-09-10 19:24:29,592 INFO] Building ['url_unittests'].
[07:33:59] ninja: Entering directory `/home/chromium/src/out/coverage'
[07:34:03] [0/1] Regenerating ninja files
[07:34:17] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[07:34:19] [2/2] LINK ./url_unittests
[2021-09-10 19:24:50,259 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-10 19:24:52,904 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-10 19:24:52,905 INFO] Creating target profile data file.
[2021-09-10 19:24:53,491 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-10 19:24:53,552 INFO] Creating the coverage profile data file.
[2021-09-10 19:24:53,575 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-10 19:24:53,576 INFO] Finding shared libraries for targets (if any).
[2021-09-10 19:24:53,584 INFO] Finished finding shared libraries for targets.
[2021-09-10 19:24:53,584 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-10 19:24:56,003 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[07:34:26] browser output cleanup
[07:34:26] fuzzing languages
[07:34:48] fuzzing Python
[07:34:49] fuzzing C
[07:34:50] fuzzing Cpp
[07:35:00] fuzzing Java
[07:35:03] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[07:35:03] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[07:35:43] fuzzing Ruby
[07:35:52] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[07:35:52] fuzzing JavaScript
[07:35:59] fuzzing PHP
[07:36:21] fuzzing Go
[07:36:22] finalizing results
[07:38:11] skip writing md file
[07:38:11] skip html prettify due to large nr of inputs (34791)
[07:38:11] writing resultoverview
[07:38:11] skip prettify detailed results due to large nr of inputs(34791)
[07:38:11] writing browseroverview
[07:38:11] used seed: -3839114336793880439
[07:38:11] done
