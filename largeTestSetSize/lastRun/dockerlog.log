Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:00:00] removing old coverage data
[00:00:02] executing tests
[06:50:54] generating reports
[06:50:56] browser output cleanup
[06:50:56] fuzzing chromium
[2021-09-09 04:36:25,509 INFO] Building ['url_unittests'].
[06:50:57] ninja: Entering directory `/home/chromium/src/out/coverage'
[06:51:01] [0/1] Regenerating ninja files
[06:51:16] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[06:51:20] [2/2] LINK ./url_unittests
[2021-09-09 04:36:48,402 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-09 04:36:50,708 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-09 04:36:50,709 INFO] Creating target profile data file.
[2021-09-09 04:36:51,278 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-09 04:36:51,282 INFO] Creating the coverage profile data file.
[2021-09-09 04:36:51,310 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-09 04:36:51,311 INFO] Finding shared libraries for targets (if any).
[2021-09-09 04:36:51,319 INFO] Finished finding shared libraries for targets.
[2021-09-09 04:36:51,319 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-09 04:36:53,247 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[06:51:25] browser output cleanup
[06:51:25] fuzzing languages
[06:51:25] fuzzing Python
[06:51:27] fuzzing C
[06:51:27] fuzzing Cpp
[06:51:36] fuzzing Java
[06:51:37] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[06:51:37] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[06:52:13] fuzzing Ruby
[06:52:18] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[06:52:19] fuzzing JavaScript
[06:52:25] fuzzing PHP
[06:52:45] fuzzing Go
[06:52:46] finalizing results
[06:54:15] skip writing md file
[06:54:15] skip html prettify due to large nr of inputs (31004)
[06:54:15] writing resultoverview
[06:54:15] skip prettify detailed results due to large nr of inputs(31004)
[06:54:15] writing browseroverview
[06:54:15] used seed: -3839114336793880439
[06:54:15] done
