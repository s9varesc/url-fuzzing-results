Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:00:01] removing old coverage data
[00:00:03] executing tests
[05:09:48] generating reports
[05:09:50] browser output cleanup
[05:09:50] fuzzing chromium
[2021-09-07 16:11:18,177 INFO] Building ['url_unittests'].
[05:09:51] ninja: Entering directory `/home/chromium/src/out/coverage'
[05:09:55] [0/1] Regenerating ninja files
[05:10:08] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[05:10:11] [2/2] LINK ./url_unittests
[2021-09-07 16:11:38,840 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-07 16:11:40,733 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-07 16:11:40,734 INFO] Creating target profile data file.
[2021-09-07 16:11:41,300 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-07 16:11:41,304 INFO] Creating the coverage profile data file.
[2021-09-07 16:11:41,330 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-07 16:11:41,331 INFO] Finding shared libraries for targets (if any).
[2021-09-07 16:11:41,339 INFO] Finished finding shared libraries for targets.
[2021-09-07 16:11:41,339 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-07 16:11:43,043 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[05:10:16] browser output cleanup
[05:10:16] fuzzing languages
[05:10:16] fuzzing Python
[05:10:18] fuzzing C
[05:10:18] fuzzing Cpp
[05:10:28] fuzzing Java
[05:10:28] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[05:10:28] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[05:11:03] fuzzing Ruby
[05:11:07] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[05:11:07] fuzzing JavaScript
[05:11:13] fuzzing PHP
[05:11:29] fuzzing Go
[05:11:30] finalizing results
[05:12:37] skip writing md file
[05:12:37] skip html prettify due to large nr of inputs (25294)
[05:12:37] writing resultoverview
[05:12:37] skip prettify detailed results due to large nr of inputs(25294)
[05:12:37] writing browseroverview
[05:12:37] used seed: -3839114336793880439
[05:12:38] done
