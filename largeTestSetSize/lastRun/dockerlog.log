Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:00:49] removing old coverage data
[00:00:51] executing tests
[08:25:32] generating reports
[08:25:34] browser output cleanup
[08:25:34] fuzzing chromium
[2021-09-12 13:17:11,263 INFO] Building ['url_unittests'].
[08:26:25] ninja: Entering directory `/home/chromium/src/out/coverage'
[08:26:28] [0/1] Regenerating ninja files
[08:26:45] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[08:26:51] [2/2] LINK ./url_unittests
[2021-09-12 13:17:38,612 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-12 13:17:41,577 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-12 13:17:41,579 INFO] Creating target profile data file.
[2021-09-12 13:17:42,150 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-12 13:17:42,154 INFO] Creating the coverage profile data file.
[2021-09-12 13:17:42,179 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-12 13:17:42,180 INFO] Finding shared libraries for targets (if any).
[2021-09-12 13:17:42,189 INFO] Finished finding shared libraries for targets.
[2021-09-12 13:17:42,189 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-12 13:17:43,965 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[08:26:57] browser output cleanup
[08:26:57] fuzzing languages
[08:27:25] fuzzing Python
[08:27:26] fuzzing C
[08:27:27] fuzzing Cpp
[08:27:37] fuzzing Java
[08:27:38] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[08:27:38] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[08:28:20] fuzzing Ruby
[08:28:29] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[08:28:29] fuzzing JavaScript
[08:28:36] fuzzing PHP
[08:29:02] fuzzing Go
[08:29:04] finalizing results
[08:31:20] skip writing md file
[08:31:20] skip html prettify due to large nr of inputs (39480)
[08:31:20] writing resultoverview
[08:31:20] skip prettify detailed results due to large nr of inputs(39480)
[08:31:20] writing browseroverview
[08:31:20] used seed: -3839114336793880439
[08:31:21] done
