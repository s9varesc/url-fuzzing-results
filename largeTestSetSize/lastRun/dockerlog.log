Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:02:12] removing old coverage data
[00:02:14] executing tests
[10:11:50] generating reports
[10:11:52] browser output cleanup
[10:11:52] fuzzing chromium
[2021-09-14 12:44:53,417 INFO] Building ['url_unittests'].
[10:12:43] ninja: Entering directory `/home/chromium/src/out/coverage'
[10:12:46] [0/1] Regenerating ninja files
[10:13:02] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[10:13:04] [2/2] LINK ./url_unittests
[2021-09-14 12:45:15,607 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-14 12:45:18,821 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-14 12:45:18,825 INFO] Creating target profile data file.
[2021-09-14 12:45:19,409 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-14 12:45:19,413 INFO] Creating the coverage profile data file.
[2021-09-14 12:45:19,437 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-14 12:45:19,438 INFO] Finding shared libraries for targets (if any).
[2021-09-14 12:45:19,445 INFO] Finished finding shared libraries for targets.
[2021-09-14 12:45:19,445 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-14 12:45:21,197 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[10:13:10] browser output cleanup
[10:13:10] fuzzing languages
[10:13:46] fuzzing Python
[10:13:48] fuzzing C
[10:13:49] fuzzing Cpp
[10:13:57] fuzzing Java
[10:13:57] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[10:13:57] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[10:14:42] fuzzing Ruby
[10:14:53] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[10:14:53] fuzzing JavaScript
[10:14:58] fuzzing PHP
[10:15:26] fuzzing Go
[10:15:27] finalizing results
[10:18:16] skip writing md file
[10:18:16] skip html prettify due to large nr of inputs (44172)
[10:18:16] writing resultoverview
[10:18:16] skip prettify detailed results due to large nr of inputs(44172)
[10:18:16] writing browseroverview
[10:18:16] used seed: -3839114336793880439
[10:18:16] done
