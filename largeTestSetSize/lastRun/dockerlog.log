Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:00:27] removing old coverage data
[00:00:29] executing tests
[11:01:54] generating reports
[11:01:57] browser output cleanup
[11:01:57] fuzzing chromium
[2021-09-16 17:41:33,786 INFO] Building ['url_unittests'].
[11:02:45] ninja: Entering directory `/home/chromium/src/out/coverage'
[11:02:49] [0/1] Regenerating ninja files
[11:03:04] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[11:03:05] [2/2] LINK ./url_unittests
[2021-09-16 17:41:55,031 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-16 17:41:58,805 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-16 17:41:58,808 INFO] Creating target profile data file.
[2021-09-16 17:41:59,372 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-16 17:41:59,376 INFO] Creating the coverage profile data file.
[2021-09-16 17:41:59,401 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-16 17:41:59,402 INFO] Finding shared libraries for targets (if any).
[2021-09-16 17:41:59,409 INFO] Finished finding shared libraries for targets.
[2021-09-16 17:41:59,409 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-16 17:42:01,185 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[11:03:12] browser output cleanup
[11:03:12] fuzzing languages
[11:03:50] fuzzing Python
[11:03:52] fuzzing C
[11:03:52] fuzzing Cpp
[11:04:02] fuzzing Java
[11:04:02] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[11:04:02] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[11:04:52] fuzzing Ruby
[11:05:05] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[11:05:05] fuzzing JavaScript
[11:05:13] fuzzing PHP
[11:05:44] fuzzing Go
[11:05:45] finalizing results
[11:09:08] skip writing md file
[11:09:08] skip html prettify due to large nr of inputs (48817)
[11:09:08] writing resultoverview
[11:09:08] skip prettify detailed results due to large nr of inputs(48817)
[11:09:08] writing browseroverview
[11:09:08] used seed: -3839114336793880439
[11:09:08] done
