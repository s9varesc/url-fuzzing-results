Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:00:00] removing old coverage data
[00:00:02] executing tests
[06:40:58] generating reports
[06:41:00] browser output cleanup
[06:41:00] fuzzing chromium
[2021-09-08 21:40:25,462 INFO] Building ['url_unittests'].
[06:41:01] ninja: Entering directory `/home/chromium/src/out/coverage'
[06:41:05] [0/1] Regenerating ninja files
[06:41:21] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[06:41:24] [2/2] LINK ./url_unittests
[2021-09-08 21:40:48,310 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-08 21:40:50,405 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-08 21:40:50,407 INFO] Creating target profile data file.
[2021-09-08 21:40:50,974 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-08 21:40:52,015 INFO] Creating the coverage profile data file.
[2021-09-08 21:40:52,065 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-08 21:40:52,066 INFO] Finding shared libraries for targets (if any).
[2021-09-08 21:40:52,073 INFO] Finished finding shared libraries for targets.
[2021-09-08 21:40:52,073 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-08 21:40:53,751 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[06:41:29] browser output cleanup
[06:41:29] fuzzing languages
[06:41:35] fuzzing Python
[06:41:36] fuzzing C
[06:41:37] fuzzing Cpp
[06:41:46] fuzzing Java
[06:41:47] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[06:41:47] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[06:42:24] fuzzing Ruby
[06:42:29] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[06:42:29] fuzzing JavaScript
[06:42:34] fuzzing PHP
[06:42:53] fuzzing Go
[06:42:54] finalizing results
[06:44:18] skip writing md file
[06:44:18] skip html prettify due to large nr of inputs (30051)
[06:44:18] writing resultoverview
[06:44:18] skip prettify detailed results due to large nr of inputs(30051)
[06:44:18] writing browseroverview
[06:44:18] used seed: -3839114336793880439
[06:44:19] done
