Already up to date.
[00:00:00] prepare result locations
[00:00:00] fuzzing targets all 
[00:00:00] fuzzing firefox
[00:01:10] removing old coverage data
[00:01:12] executing tests
[12:04:48] generating reports
[12:04:50] browser output cleanup
[12:04:50] fuzzing chromium
[2021-09-18 16:34:13,891 INFO] Building ['url_unittests'].
[12:06:34] ninja: Entering directory `/home/chromium/src/out/coverage'
[12:06:37] [0/1] Regenerating ninja files
[12:06:54] [1/2] CXX obj/url/url_unittests/url_parsing_unittest.o
[12:06:57] [2/2] LINK ./url_unittests
[2021-09-18 16:34:38,956 INFO] Running command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing", the output is redirected to "/home/chromium/src/out/report/linux/logs/url_unittests_output.log".
[2021-09-18 16:34:42,892 WARNING] Command: "out/coverage/url_unittests --gtest_filter=URLParser.Parsing" exited with non-zero return code.
[2021-09-18 16:34:42,894 INFO] Creating target profile data file.
[2021-09-18 16:34:43,442 INFO] Target "url_unittests" profile data is created as: "/home/chromium/src/out/report/url_unittests.profdata".
[2021-09-18 16:34:44,260 INFO] Creating the coverage profile data file.
[2021-09-18 16:34:44,286 INFO] Code coverage profile data is created as: "/home/chromium/src/out/report/linux/coverage.profdata".
[2021-09-18 16:34:44,287 INFO] Finding shared libraries for targets (if any).
[2021-09-18 16:34:44,294 INFO] Finished finding shared libraries for targets.
[2021-09-18 16:34:44,294 INFO] Generating code coverage report in html (this can take a while depending on size of target!).
[2021-09-18 16:34:46,079 INFO] Index file for html report is generated as: "file:///home/chromium/src/out/report/linux/index.html".
[12:07:05] browser output cleanup
[12:07:05] fuzzing languages
[12:08:13] fuzzing Python
[12:08:15] fuzzing C
[12:08:16] fuzzing Cpp
[12:08:25] fuzzing Java
[12:08:27] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java to provide /usr/bin/java (java) in manual mode
[12:08:27] update-alternatives: using /usr/lib/jvm/java-8-openjdk-amd64/bin/javac to provide /usr/bin/javac (javac) in manual mode
WARNING : java.lang.Object can't be statically instrumented and was excluded
[12:09:19] fuzzing Ruby
[12:09:34] Coverage report generated for Unknown Test Framework to /home/url-fuzzing/languagefuzzing/RubyCoverage/coverage. 139 / 193 LOC (72.02%) covered.
[12:09:34] fuzzing JavaScript
[12:09:41] fuzzing PHP
[12:10:14] fuzzing Go
[12:10:15] finalizing results
[12:14:06] skip writing md file
[12:14:06] skip html prettify due to large nr of inputs (52495)
[12:14:06] writing resultoverview
[12:14:06] skip prettify detailed results due to large nr of inputs(52495)
[12:14:06] writing browseroverview
[12:14:06] used seed: -3839114336793880439
[12:14:06] done
